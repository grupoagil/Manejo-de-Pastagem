<template>
  <div class="page" data-name="tiposdepastos">
    <div class="topo-login d-flex flex-column space-between">
      <div class="logo-base-topo">
        <div class="left">
          <a href="#" class="circle-white back">
            <img src="${imgArrow}" alt="" />
          </a>
        </div>
        <div class="logo-topo">
          <img src="${imgLogoLogin}" alt="" />
        </div>
        <div class="login-topo">Pastos e Períodos</div>
      </div>
      <div class="little-gram"></div>
    </div>
    <div class="d-flex flex-column justify-center mt-percent-1 ${loading ? $h`skeleton-text skeleton-effect-${effect}` : $h`none`}">
      <div class="margin d-flex">
        <div style="width: 100%;">
          <a href="/registerPicket/" class="btn-green">
            <p class="title-03 white-color">Nova Pasto</p>
          </a>
        </div>
        <div class="margin"></div>
        <div style="width: 100%;">
          <a href="/registerPeriod/" class="btn-green">
            <p class="title-03 white-color">Novo Período</p>
          </a>
        </div>
      </div>
      <div class="margin d-flex flex-column align-items-center">
        <div class="info-today-text">Informação do período atual de pasto</div>
        <div class="all-picket box-textarea">
          ${periodos.map((periodo) => $h`
            ${((new Date(periodo.PASTO_DATA_INICIAL+' 00:00:00')).getTime() < (new Date()).getTime() && (new Date(periodo.PASTO_DATA_FINAL+' 00:00:00')).getTime() > (new Date()).getTime()) ? $h`
              <div class="box-picket">
                <div class="box-picket-top">
                  <div class="box-picket-title">${periodo.PASTO_PERIODO_NOME}</div>
                  <div class="box-picket-text">
                    <b>
                      Data Inicial: <br></br>
                      ${(periodo.PASTO_DATA_INICIAL == null)?'Sem Data':dateFormatter(periodo.PASTO_DATA_INICIAL)}<br></br>
                      Data Final: <br></br>
                      ${(periodo.PASTO_DATA_FINAL == null)?'Sem Data':dateFormatter(periodo.PASTO_DATA_FINAL)}<br></br>
                      Pasto: <br></br>
                      ${periodo.pasto.PASTO_NOME} ( ${periodo.pasto.PASTO_TIPO} )
                    </b>
                  </div>
                </div>
                <div class="box-picket-bottom">
                  <div class="box-picket-status status-success">Dentro do Período</div>
                </div>
              </div>
            `: $h`<br></br>`}
          `)}
        </div>
      </div>
      <!-- Lista de Períodos -->
      <div class="margin">
        <div class="picket-title">
          <div class="picket-green"></div>
          <div class="picket-text">Períodos do Sistema</div>
        </div>
      </div>
      <div class="all-picket">
        ${periodos.map((periodo) => $h`
          <div class="box-picket">
            <div class="box-picket-top">
              <div class="box-picket-toptitle">
                ${((new Date(periodo.PASTO_DATA_INICIAL+' 00:00:00')).getTime() <= (new Date()).getTime() && (new Date(periodo.PASTO_DATA_FINAL+' 00:00:00')).getTime() >= (new Date()).getTime()) ? $h`
                <div class="box-picket-number status-success"><i class="material-icons">done</i></div>
                `: $h`<br></br>`}
                <div class="box-picket-remove" @click="${()=>{deletePeriodo(periodo)}}"><i class="material-icons">delete</i></div>
              </div>
              <div class="box-picket-title">${periodo.PASTO_PERIODO_NOME}</div>
              <div class="box-picket-text">
                <b>
                  Data Inicial: <br></br>
                  ${(periodo.PASTO_DATA_INICIAL == null)?'Sem Data':dateFormatter(periodo.PASTO_DATA_INICIAL)}<br></br>
                  Data Final: <br></br>
                  ${(periodo.PASTO_DATA_FINAL == null)?'Sem Data':dateFormatter(periodo.PASTO_DATA_FINAL)}<br></br>
                  Pasto: <br></br>
                  ${periodo.pasto.PASTO_NOME} ( ${periodo.pasto.PASTO_TIPO} )
                </b>
              </div>
            </div>
          </div>
        `)}
      </div>
      <!-- Lista de Períodos -->
        <!-- Rodapé -->
      <div class="gram position-relative"></div>
    </div>
  </div>
</template>

<script>
  import imgArrow from "../assets/icons/arrow.svg";
  import imgCow from "../assets/icons/cow.svg";
  import imgCowFace from "../assets/icons/cow-face.svg";
  import imgGram from "../assets/icons/gram.svg";
  import imgLogo from "../assets/icons/logo.svg";
  import imgLogoLogin from "../assets/icons/logo-login.svg";
  import imgPlus from "../assets/icons/plus.svg";
  import imgSubtract from "../assets/icons/subtract.svg";
  import imgSuccess from "../assets/icons/success.svg";
  import imgProfile from "../assets/icons/profile.svg";
  import imgLittleGram from "../assets/icons/little-gram.png";
  import api from "../js/api.js";
  import $$ from "dom7";

  export default (props, { $f7, $update }) => {
    let loading = false;
    let effect = "fade";
    var preloader;
    let periodos = [];
    // Carrega informações da página
    $$(document).on('page:init', '.page[data-name="tiposdepastos"]', function (e) {
      requestPage();
    });
    $$(document).on('page:reinit', '.page[data-name="tiposdepastos"]', function (e) {
      requestPage();
    });
    const requestPage = () => {
      loading=true;
      $update();
      api.pastos.periodos
      .lista()
      .then((r) => {
        periodos = r.data;
        loading=false;
        $update();
      })
      .catch((e) => {
        loading=false;
        $update();
      });
    };
    // Remover Período
    const deletePeriodo = (periodo) => {
      $f7.dialog.confirm('Deseja realmente apagar o Período '+periodo.PASTO_PERIODO_NOME+'?', function () {
        // Sim  
        $f7.dialog.preloader('Removendo período ...');
        api.pastos.periodos.apagar(periodo.id).then((succs)=>{
          $f7.dialog.close();
          $f7.dialog.alert('Período removido com sucesso!');
          setTimeout(()=>{$f7.dialog.close();},2000);
          requestPage();
        }).catch((err)=>{
          $f7.dialog.close();
          $f7.dialog.alert('Período não removido! Erro, Tente novamente!');
          setTimeout(()=>{$f7.dialog.close();},2000);
        });
      });
    };
    // Formatação de Datas
    const dateFormatter = (date) => {
      return (new Date(date+' 00:00:00')).toLocaleDateString();
    };
    return $render;
  };
</script>
