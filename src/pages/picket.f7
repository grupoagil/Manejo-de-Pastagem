<template>
  <div class="page" data-name="picket">
    <div class="topo-login d-flex flex-column space-between">
      <div class="logo-base-topo">
        <div class="left">
          <a href="#" class="circle-white back">
            <img src="${imgArrow}" alt="" />
          </a>
        </div>
        <div class="logo-topo">
          <img src="${imgLogoLogin}" alt="" />
        </div>
        <div class="login-topo">Piquetes</div>
      </div>
      <div class="little-gram"></div>
    </div>
    <div class="d-flex flex-column justify-center mt-percent-1">
      <div class="margin">
        <div style="width: 100%">
          <a href="/registerFarm/" class="btn-green">
            <p class="title-03 white-color">Nova Fazenda</p>
          </a>
        </div>
      </div>
      <div class="rule-green"></div>
      <!-- Carregando -->
      ${loading ? $h`
        <div class="margin skeleton-text skeleton-effect-${effect}">
          <div class="picket-title">
            <div class="picket-green"></div>
            <div class="picket-text">Carregando...</div>
          </div>
        </div>
        <div class="all-picket skeleton-text skeleton-effect-${effect}">
          <div class="box-picket">
            <div class="box-picket-top">
              <div class="box-picket-number status-alert">...</div>
              <div class="box-picket-title">Carregando...</div>
              <div class="box-picket-text">Carregando...</div>
            </div>
            <div class="box-picket-bottom">
              <div class="box-picket-status status-alert">Carregando...</div>
            </div>
          </div>
          <div class="box-picket">
            <div class="box-picket-top">
              <div class="box-picket-number status-success">...</div>
              <div class="box-picket-title">Carregando...</div>
              <div class="box-picket-text">Carregando...</div>
            </div>
            <div class="box-picket-bottom">
              <div class="box-picket-status status-success">Carregando...</div>
            </div>
          </div>
          <a class="box-add-picket">
            <div class="add-picket">+</div>
          </a>
        </div>
      ` : $h` <!-- Carregando -->
      <!-- Verifica quantidade Fazendas -->
        ${fazendas.length > 0 ? $h`
          <!-- Percorre Fazendas -->
          ${fazendas.map((fazenda,key) => $h`
            <div class="margin">
              <div class="picket-title">
                <div class="picket-green"></div>
                <div class="picket-text">${fazenda.FAZENDA_NOME}</div>
                <div class="picket-edit" @click="${()=>{editFazenda(fazenda)}}"><i class="material-icons">edit</i></div>
                <div class="picket-remove" @click="${()=>{apagarFazenda(fazenda)}}"><i class="material-icons">delete</i></div>
              </div>
              ${fazenda.pasto != null ? $h`
              ${fazenda.pasto.PASTO_TIPO} (${fazenda.pasto.PASTO_NOME})
              ` : $h`Sem Pasto`}
            </div>
            <div class="all-picket">
              <!-- Percorre os Piquetes -->
              ${fazenda.piquetes.map((piquete) => $h`
                <div class="box-picket boxid-${piquete.PIQUETE_INDEX}" @click="${()=>{editPiquete(piquete)}}">
                  <div class="box-picket-top">
                    <div class="box-picket-toptitle">
                      <div class="box-picket-number status-${(piquete.PIQUETE_OCUPADO)?'alert':'success'}">${piquete.PIQUETE_INDEX}</div>
                      <div class="box-picket-remove" @click="${()=>{deletePiquete(piquete)}}"><i class="material-icons">delete</i></div>
                    </div>
                    <div class="box-picket-title">Piquete ${piquete.PIQUETE_INDEX}</div>
                    <div class="box-picket-text">
                      Última Ocupação: <br></br><b>${(piquete.PIQUETE_ULTIMA_OCUPACAO == null)?'Sem Data':dateFormatter(piquete.PIQUETE_ULTIMA_OCUPACAO)}</b><br></br>
                      Última Desocupação: <br></br><b>${(piquete.PIQUETE_ULTIMA_DESOCUPACAO == null)?'Sem Data':dateFormatter(piquete.PIQUETE_ULTIMA_DESOCUPACAO)}</b><br></br>
                    </div>
                  </div>
                  <div class="box-picket-bottom">
                    <div class="box-picket-status status-${(piquete.PIQUETE_OCUPADO)?'alert':'success'}">${(piquete.PIQUETE_OCUPADO)?'Ocupado':'Descoupado'}</div>
                  </div>
                </div>
              `)}
              <!-- Percorre os Piquetes -->
              <a class="box-add-picket" @click="${()=>{addPiquete(fazenda)}}">
                <div class="add-picket">+</div>
              </a>
            </div>
            <!-- Verifica se é a última fazenda para não colocar a seperação -->
            ${key != (fazendas.length - 1) ? $h`
              <div class="picket-green"></div>
            `: $h`<br></br>`}
            <!-- Verifica se é a última fazenda para não colocar a seperação -->
          `)} 
          <!-- Percorre Fazendas -->
          <!-- Rodapé -->
          <div class="gram position-relative"></div>
        ` : $h`
          <div class="margin">
            <div class="picket-title">
              <div class="picket-green"></div>
              <div class="picket-text">Sem Fazendas!<br></br> Crie uma nova Fazenda.</div>
            </div>
          </div>
          <!-- Rodapé -->
          <div class="gram"></div>
        `}
        <!-- Verifica quantidade Fazendas -->
      `}
      <!-- Carregando -->
    </div>
    <!-- And somewhere in DOM -->
    <div class="popup" id="editFazenda">
      <div class="view">
        <div class="page">
          <div class="navbar">
            <div class="navbar-bg"></div>
            <div class="navbar-inner">
              <div class="title">Editar Fazenda</div>
              <div class="right">
                <!-- Link to close popup -->
                <a class="link popup-close"><i class="material-icons">close</i></a>
              </div>
            </div>
          </div>
          <div class="page-content justify-center mt-percent-1">
            <div class="item-inner margin">
              <div class="item-title item-label title-05 mb-1">Nome da fazenda</div>
              <div class="item-input-wrap template-box p-1 outline-green">
                <input type="text" name="fazenda_nome" placeholder="Digita o Nome da fazenda" class="w-100" />
              </div>
            </div>
      
            <div class="item-inner margin">
              <div class="item-title item-label title-05 mb-1">Tipo de pasto</div>
              <div class="item-input-wrap template-box p-1">
                <select name="pasto_id" class="w-100">
                  <option value="null" selected disabled>Selecione o Pasto</option>
                  ${pastos.length > 0  ? $h`
                    ${pastos.map((pasto) => $h`
                      <option value="${pasto.id}">${pasto.PASTO_TIPO} ( ${pasto.PASTO_NOME} )</option>
                    `)} 
                  `: $h`<option value="null">Sem Pastos</option>`}
                </select>
              </div>
            </div>
      
            <div class="item-inner margin">
              <div class="item-title item-label title-05 mb-1">
                Quantidade de piquetes
              </div>
              <div class="item-input-wrap template-box p-1">
                <input type="number" name="piquetes_qnt" placeholder="Digite um valor" class="w-100" min="1" max="100" />
              </div>
            </div>
      
            <div class="margin">
              <div style="width: 100%">
                <a href="#" class="btn-green" @click="${atualizafazenda}">
                  <p class="title-03 white-color">Atualizar Fazenda</p>
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
  import imgArrow from "../assets/icons/arrow.svg";
  import imgCow from "../assets/icons/cow.svg";
  import imgCowFace from "../assets/icons/cow-face.svg";
  import imgGram from "../assets/icons/gram.svg";
  import imgLogo from "../assets/icons/logo.svg";
  import imgLogoLogin from "../assets/icons/logo-login.svg";
  import imgPlus from "../assets/icons/plus.svg";
  import imgSubtract from "../assets/icons/subtract.svg";
  import imgSuccess from "../assets/icons/success.svg";
  import imgProfile from "../assets/icons/profile.svg";
  import imgLittleGram from "../assets/icons/little-gram.png";
  import api from "../js/api.js";
  import $$ from "dom7";

  export default (props, { $f7, $update }) => {
    let loading = true;
    let effect = "fade";
    let pastos = [];
    let fazendas;
    let userName = localStorage.getItem("username");
    $$(document).on('page:init', '.page[data-name="picket"]', function (e) {
      requestPage();
    });
    $$(document).on('page:reinit', '.page[data-name="picket"]', function (e) {
      requestPage();
    });
    const requestPage = () => {
      loading=true;
      $update();
      // Atualiza página quando estiver visível
      api.fazendas
        .info()
        .then((r) => {
          fazendas = r.data;
          loading=false;
          $update();
        })
        .catch((e) => {
          console.log("False Error");
        });
      // Atualiza lista de pasto
      api.pastos
        .lista()
        .then((r) => {
          pastos = r.data;
          $update();
          $f7.dialog.close();
        })
        .catch((e) => {
          $f7.dialog.close();
        });
    };
    // Remove duplicidade de click em editar ao clicar em apagar
    var deleteOpen = false;
    // Editar Piquete
    const editPiquete = (piquete) =>{
      if (!deleteOpen) {
        // Vertical Buttons
        $f7.dialog.create({
          title: 'Editar Piquete '+piquete.PIQUETE_INDEX,
          text: 'Escolha uma opção a baixo para alterar status do piquete.',
          buttons: [
            {
              text: 'Ocupado',
              onClick:()=>{
                $f7.dialog.preloader('Atualizando status para ocupado...');
                api.fazendas.piquetes.atualiza({
                    "index":piquete.PIQUETE_INDEX,
                    "ocupado":true
                },piquete.FAZENDA_ID).then((sucess)=>{
                  $f7.dialog.close();
                  requestPage();
                }).catch((err)=>{console.log(err)});
              },
              color:'yellow'
            },
            {
              text: 'Desocupado',
              onClick:()=>{
                $f7.dialog.preloader('Atualizando status para desocupado...');
                api.fazendas.piquetes.atualiza({
                    "index":piquete.PIQUETE_INDEX,
                    "ocupado":false
                },piquete.FAZENDA_ID).then((sucess)=>{
                  $f7.dialog.close();
                  requestPage();
                }).catch((err)=>{console.log(err)});
              },
              color:'green'
            },
            {
              text: 'Cancelar',
              color:'red'
            },
          ],
          verticalButtons: true,
        }).open();
      }
    };
    // Apagar Piquete
    const deletePiquete = (piquete) =>{
      deleteOpen = true;$update();
      setTimeout(()=>{deleteOpen=false;$update();},1000);
      // Pergunta se deseja realmente apagar
      $f7.dialog.confirm('Deseja realmente apagar o Piquete '+piquete.PIQUETE_INDEX+'?', function () {
        // Sim  
        $f7.dialog.preloader('Removendo piquete ...');
        api.fazendas.piquetes.delete({
            "index":piquete.PIQUETE_INDEX
        },piquete.FAZENDA_ID).then((succs)=>{
          $f7.dialog.close();
          $f7.dialog.alert('Piquete removido com sucesso!');
          setTimeout(()=>{$f7.dialog.close();},2000);
          requestPage();
        }).catch((err)=>{
          console.log(err);
        });
      });
    };
    // Adicionar Piquete
    const addPiquete = (fazenda) => {
      // Pergunta se deseja realmente apagar
      $f7.dialog.confirm('Deseja realmente adicionar Piquete!?', function () {
        // Sim  
        $f7.dialog.preloader('Adicionar piquete ...');
        api.fazendas.piquetes.add(fazenda.id).then((succs)=>{
          $f7.dialog.close();
          $f7.dialog.alert('Piquete Adicionado com sucesso!');
          setTimeout(()=>{$f7.dialog.close();},2000);
          requestPage();
        }).catch((err)=>{
          console.log(err);
        });
      });
    };
    // Formatação de Datas
    const dateFormatter = (date) => {
      return (new Date(date)).toLocaleString();
    };

    // Edit Fazenda
    var fazendaEdit = null;
    const editFazenda = (fazenda) => {
      $$('#editFazenda').find('input[name="fazenda_nome"]').val(fazenda.FAZENDA_NOME);
      $$('#editFazenda').find('select[name="pasto_id"]').val(fazenda.PASTO_ID).trigger('change');
      $$('#editFazenda').find('input[name="piquetes_qnt"]').val(fazenda.piquetes.length);
      fazendaEdit = fazenda;
      $update();
      $f7.popup.open('#editFazenda');
    };
    const atualizafazenda = () => {
      if (
        $$('#editFazenda').find('input[name="fazenda_nome"]').val() == "" ||
        $$('#editFazenda').find('input[name="piquetes_qnt"]').val() == "" ||
        $$('#editFazenda').find('select[name="pasto_id"]').val() == "" ||
        $$('#editFazenda').find('select[name="pasto_id"]').val() == "null"
      ){
        // Campos faltando
        $f7.dialog.alert('Erro! Preencha todos os campos.');
        setTimeout(()=>{
          $f7.dialog.close();
        },2000); 
      }else{
        // Todos os campos preenchidos
        $f7.dialog.preloader('Adicionando fazendas ...');
        api.fazendas.atualiza({
          "fazenda_nome":$$('#editFazenda').find('input[name="fazenda_nome"]').val(),
          "pasto_id":$$('#editFazenda').find('select[name="pasto_id"]').val(),
          "piquetes_qnt":$$('#editFazenda').find('input[name="piquetes_qnt"]').val()
        },fazendaEdit.id).then((succss)=>{
          $f7.dialog.close();
          $f7.popup.close();
          $f7.dialog.alert('Fazendas atualizada com sucesso!');
          setTimeout(()=>{$f7.dialog.close();},2000);
          requestPage();
        }).catch(()=>{
          // Error
          $f7.dialog.close();
          $f7.popup.close();
          $f7.dialog.alert('Fazendas não atualizada!');
          setTimeout(()=>{$f7.dialog.close();},2000);
          requestPage();
        });
      }
    };
    // Apagar fazenda
    const apagarFazenda = (fazenda) => {
      // Pergunta se deseja realmente apagar
      $f7.dialog.confirm('Deseja realmente apagar o Fazenda '+fazenda.FAZENDA_NOME+'?', function () {
        // Sim  
        $f7.dialog.preloader('Removendo fazenda ...');
        api.fazendas.delete({
            "id":fazenda.id
        }).then((succs)=>{
          $f7.dialog.close();
          $f7.dialog.alert('Fazenda removido com sucesso!');
          setTimeout(()=>{$f7.dialog.close();},2000);
          requestPage();
        }).catch((err)=>{
          $f7.dialog.close();
          $f7.dialog.alert('Fazendas não removida! Error.');
          setTimeout(()=>{$f7.dialog.close();},2000);
          requestPage();
        });
      });
    };
    return $render;
  };
</script>
